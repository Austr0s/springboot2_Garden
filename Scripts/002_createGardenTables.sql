USE gardendb;

DROP TABLE IF EXISTS ORDER_DETAIL;
DROP TABLE IF EXISTS PRODUCT;
DROP TABLE IF EXISTS PRODUCT_RANGE;
DROP TABLE IF EXISTS ORDER_REGISTRATION;
DROP TABLE IF EXISTS PAYMENT;
DROP TABLE IF EXISTS CLIENT;
DROP TABLE IF EXISTS EMPLOYEE;
DROP TABLE IF EXISTS OFFICE;



CREATE TABLE OFFICE (
    ID INT(20) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Entity ID, Primary Key',
    CODE varchar(10) NOT NULL,
    CITY VARCHAR(30) NOT NULL,
    COUNTRY VARCHAR(50) NOT NULL,
    REGION VARCHAR(50) DEFAULT NULL,
    ZIP_CODE VARCHAR(10) NOT NULL,
    PHONE VARCHAR(20) NOT NULL,
    LINE_DIRECTION1 VARCHAR(50) NOT NULL,
    LINE_DIRECTION2 VARCHAR(50) DEFAULT NULL,

    CONSTRAINT PK_OFFICE PRIMARY KEY (ID)
);


CREATE TABLE EMPLOYEE (
    ID INT(20) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Entity ID, Primary Key',
    NAME VARCHAR(50) NOT NULL,
    FIRSTNAME VARCHAR(50) NOT NULL,
    LASTNAME VARCHAR(50) DEFAULT NULL,
    EXTENSION VARCHAR(10) NOT NULL,
    EMAIL VARCHAR(100) NOT NULL,
    ID_OFFICE INT(20) UNSIGNED NOT NULL,
    ID_BOSS_EMPLOYEE INT(20) UNSIGNED DEFAULT NULL,
    WORKSTATION VARCHAR(50) DEFAULT NULL,

    CONSTRAINT PK_EMPLOYEE PRIMARY KEY (ID),
    CONSTRAINT FK_EMPLOYEE_OFFICE FOREIGN KEY (ID_OFFICE) REFERENCES OFFICE (ID),
    CONSTRAINT FK_ID_BOSS_EMPLOYEE FOREIGN KEY (ID_BOSS_EMPLOYEE) REFERENCES EMPLOYEE (ID)
);


CREATE TABLE PRODUCT_RANGE (
    ID INT(20) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Entity ID, Primary Key',
    CODE varchar(50) NOT NULL,
    TXT_DESCRIPTION TEXT,
    HTML_DESCRIPTION TEXT,
    IMAGE BLOB DEFAULT NULL,

    CONSTRAINT PK_PRODUCT_RANGE PRIMARY KEY (ID)
);


CREATE TABLE CLIENT (
    ID INT(20) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Entity ID, Primary Key',
    NAME VARCHAR(50) NOT NULL,
    CONTACT_NAME VARCHAR(30) DEFAULT NULL,
    CONTACT_FIRST_NAME VARCHAR(30) DEFAULT NULL,
    PHONE VARCHAR(15) NOT NULL,
    FAX VARCHAR(15) NOT NULL,
    LINE_DIRECTION1 VARCHAR(50) NOT NULL,
    LINE_DIRECTION2 VARCHAR(50) DEFAULT NULL,
    CITY VARCHAR(50) NOT NULL,
    REGION VARCHAR(50) DEFAULT NULL,
    COUNTRY VARCHAR(50) DEFAULT NULL,
    ZIP_CODE VARCHAR(10) DEFAULT NULL,
    ID_SALES_REP_EMPLOYEE INT(20) UNSIGNED DEFAULT NULL,
    CREDIT_LIMIT NUMERIC(15,2) DEFAULT NULL,

    CONSTRAINT PK_CLIENT PRIMARY KEY (ID),
    CONSTRAINT FK_SALES_REP_EMPLOYEE FOREIGN KEY (ID_SALES_REP_EMPLOYEE) REFERENCES EMPLOYEE (ID)
);


CREATE TABLE ORDER_REGISTRATION (
    ID INT(20) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Entity ID, Primary Key',
    ORDER_DATE DATE NOT NULL,
    EXPECTED_DATE DATE NOT NULL,
    DELIVERY_DATE DATE DEFAULT NULL,
    ORDER_STATE VARCHAR(15) NOT NULL,
    COMMENT TEXT,
    ID_CLIENT INT(20) UNSIGNED NOT NULL,

    CONSTRAINT PK_ORDER_REGISTRATION PRIMARY KEY (ID),
    CONSTRAINT FK_ORDER_CLIENT FOREIGN KEY (ID_CLIENT) REFERENCES CLIENT (ID)
);


CREATE TABLE PRODUCT (
    ID INT(20) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Entity ID, Primary Key',
    CODE varchar(15) NOT NULL,
    NAME VARCHAR(70) NOT NULL,
    ID_PRODUCT_RANGE INT(20) UNSIGNED NOT NULL,
    DIMENSIONS VARCHAR(25) NULL,
    PROVIDER VARCHAR(50) DEFAULT NULL,
    DESCRIPTION text NULL,
    STOCK SMALLINT NOT NULL,
    SALES_PRICE NUMERIC(15,2) NOT NULL,
    PROVIDER_PRICE NUMERIC(15,2) DEFAULT NULL,

    CONSTRAINT PK_PRODUCT PRIMARY KEY (ID),
    CONSTRAINT FK_PROD_PRODUCT_RANGE FOREIGN KEY (ID_PRODUCT_RANGE) REFERENCES PRODUCT_RANGE (ID)
);


CREATE TABLE ORDER_DETAIL (
    ID INT(20) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Entity ID, Primary Key',
    ID_ORDER INT(20) UNSIGNED NOT NULL,
    ID_PRODUCT INT(20) UNSIGNED NOT NULL,
    QUANTITY INTEGER NOT NULL,
    UNIT_PRICE NUMERIC(15,2) NOT NULL,
    LINE_NUMBER SMALLINT NOT NULL,

    CONSTRAINT PK_ORDER_DETAIL PRIMARY KEY (ID),
    CONSTRAINT PK_UNIQUE_ORD_DET UNIQUE KEY (ID_ORDER, ID_PRODUCT),
    CONSTRAINT FK_ORDER_DETAIL_REGI FOREIGN KEY (ID_ORDER) REFERENCES ORDER_REGISTRATION (ID),
    CONSTRAINT FK_ORDER_DETAIL_PROD FOREIGN KEY (ID_PRODUCT) REFERENCES PRODUCT (ID)
);


CREATE TABLE PAYMENT (
    ID INT(20) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Entity ID, Primary Key',
    ID_CLIENT INT(20) UNSIGNED NOT NULL,
    PAYMENT_TYPE VARCHAR(40) NOT NULL,
    ID_TRANSACTION VARCHAR(50) NOT NULL,
    PAYMENT_DATE DATE NOT NULL,
    TOTAL NUMERIC(15,2) NOT NULL,

    CONSTRAINT PK_PAYMENT PRIMARY KEY (ID),
    CONSTRAINT PK_UNIQUE_PAYMENT UNIQUE KEY (ID_CLIENT, ID_TRANSACTION),
    CONSTRAINT FK_PAYMENT_CLIENT FOREIGN KEY (ID_CLIENT) REFERENCES CLIENT (ID)
);

COMMIT;
